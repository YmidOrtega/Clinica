version: "3.8"
services:
   # Bases de datos
   patient-db:
      image: mysql:8.0
      container_name: patient-db
      restart: always
      environment:
         MYSQL_ROOT_PASSWORD: ${PATIENT_DB_ROOT_PASSWORD}
         MYSQL_DATABASE: ${PATIENT_DB_NAME}
         MYSQL_USER: ${PATIENT_DB_USER}
         MYSQL_PASSWORD: ${PATIENT_DB_PASSWORD}
      ports:
         - "3307:3306"
      volumes:
         - patient_data:/var/lib/mysql
      networks:
         - clinica-net
      healthcheck:
         test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
         timeout: 20s
         retries: 10
      command: --log-bin-trust-function-creators=1

   billing-db:
      image: mysql:8.0
      container_name: billing-db
      restart: always
      environment:
         MYSQL_ROOT_PASSWORD: ${BILLING_DB_ROOT_PASSWORD}
         MYSQL_DATABASE: ${BILLING_DB_NAME}
         MYSQL_USER: ${BILLING_DB_USER}
         MYSQL_PASSWORD: ${BILLING_DB_PASSWORD}
      ports:
         - "3308:3306"
      volumes:
         - billing_data:/var/lib/mysql
      networks:
         - clinica-net
      healthcheck:
         test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
         timeout: 20s
         retries: 10
      command: --log-bin-trust-function-creators=1

   admissions-db:
      image: postgres:16
      container_name: admissions-db
      restart: always
      environment:
         POSTGRES_DB: ${ADMISSIONS_DB_NAME}
         POSTGRES_USER: ${ADMISSIONS_DB_USER}
         POSTGRES_PASSWORD: ${ADMISSIONS_DB_PASSWORD}
      ports:
         - "3309:5432"
      volumes:
         - admissions_data:/var/lib/postgresql/data
      networks:
         - clinica-net
      healthcheck:
         test: [ "CMD-SHELL", "pg_isready -U ${ADMISSIONS_DB_USER}" ]
         interval: 10s
         timeout: 5s
         retries: 5

   ai-assistant-db:
      image: postgres:16
      container_name: ai-assistant-db
      restart: always
      environment:
         POSTGRES_DB: ${AI_ASSISTANT_DB_NAME}
         POSTGRES_USER: ${AI_ASSISTANT_DB_USER}
         POSTGRES_PASSWORD: ${AI_ASSISTANT_DB_PASSWORD}
      ports:
         - "3310:5432"
      volumes:
         - ai_assistant_data:/var/lib/postgresql/data
      networks:
         - clinica-net
      healthcheck:
         test: [ "CMD-SHELL", "pg_isready -U ${AI_ASSISTANT_DB_USER}" ]
         interval: 10s
         timeout: 5s
         retries: 5

   # Base de datos para proveedores
   suppliers-db:
      image: mysql:8.0
      container_name: suppliers-db
      restart: always
      environment:
         MYSQL_ROOT_PASSWORD: ${SUPPLIERS_DB_ROOT_PASSWORD}
         MYSQL_DATABASE: ${SUPPLIERS_DB_NAME}
         MYSQL_USER: ${SUPPLIERS_DB_USER}
         MYSQL_PASSWORD: ${SUPPLIERS_DB_PASSWORD}
      ports:
         - "3311:3306"
      volumes:
         - suppliers_data:/var/lib/mysql
      networks:
         - clinica-net
      healthcheck:
         test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
         timeout: 20s
         retries: 10
      command: --log-bin-trust-function-creators=1

   # Base de datos para autenticación
   auth-db:
      image: mysql:8.0
      container_name: auth-db
      restart: always
      environment:
         MYSQL_ROOT_PASSWORD: ${AUTH_DB_ROOT_PASSWORD}
         MYSQL_DATABASE: ${AUTH_DB_NAME}
         MYSQL_USER: ${AUTH_DB_USER}
         MYSQL_PASSWORD: ${AUTH_DB_PASSWORD}
      ports:
         - "3312:3306"
      volumes:
         - auth_data:/var/lib/mysql
      networks:
         - clinica-net
      healthcheck:
         test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
         timeout: 20s
         retries: 10
      command: --log-bin-trust-function-creators=1

   # Base de datos para clientes
   clients-db:
      image: mysql:8.0
      container_name: clients-db
      restart: always
      environment:
         MYSQL_ROOT_PASSWORD: ${CLIENTS_DB_ROOT_PASSWORD}
         MYSQL_DATABASE: ${CLIENTS_DB_NAME}
         MYSQL_USER: ${CLIENTS_DB_USER}
         MYSQL_PASSWORD: ${CLIENTS_DB_PASSWORD}
      ports:
         - "3313:3306"
      volumes:
         - clients_data:/var/lib/mysql
      networks:
         - clinica-net
      healthcheck:
         test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
         timeout: 20s
         retries: 10
      command: --log-bin-trust-function-creators=1

   # Redis para caché
   redis-cache:
      image: redis:7-alpine
      container_name: redis-cache
      restart: always
      command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
      ports:
         - "6379:6379"
      volumes:
         - redis_data:/data
      networks:
         - clinica-net
      healthcheck:
         test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
         interval: 30s
         timeout: 10s
         retries: 5
         start_period: 30s

   # Eureka Service Discovery
   eureka-service:
      build: ./eureka-service
      container_name: eureka-service
      restart: always
      environment:
         - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
         - EUREKA_CLIENT_FETCH_REGISTRY=false
         - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
         - EUREKA_INSTANCE_HOSTNAME=eureka-service
         - SPRING_PROFILES_ACTIVE=docker
      ports:
         - "8761:8761"
      networks:
         - clinica-net
      healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
         interval: 30s
         timeout: 10s
         retries: 5
         start_period: 60s

   # # Servicios Spring Boot (con configuración Redis)
   # patient-service:
   #    build: ./patient-service
   #    container_name: patient-service
   #    depends_on:
   #       patient-db:
   #          condition: service_healthy
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #    environment:
   #       - SPRING_DATASOURCE_URL=jdbc:mysql://patient-db:3306/${PATIENT_DB_NAME}
   #       - SPRING_DATASOURCE_USERNAME=${PATIENT_DB_USER}
   #       - SPRING_DATASOURCE_PASSWORD=${PATIENT_DB_PASSWORD}
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - SPRING_REDIS_LETTUCE_POOL_MAX_ACTIVE=8
   #       - SPRING_REDIS_LETTUCE_POOL_MAX_IDLE=8
   #       - SPRING_REDIS_LETTUCE_POOL_MIN_IDLE=0
   #       - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=docker
   #    ports:
   #       - "8081:8081"
   #    networks:
   #       - clinica-net

   # billing-service:
   #    build: ./billing-service
   #    container_name: billing-service
   #    depends_on:
   #       billing-db:
   #          condition: service_healthy
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #    environment:
   #       - SPRING_DATASOURCE_URL=jdbc:mysql://billing-db:3306/${BILLING_DB_NAME}
   #       - SPRING_DATASOURCE_USERNAME=${BILLING_DB_USER}
   #       - SPRING_DATASOURCE_PASSWORD=${BILLING_DB_PASSWORD}
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=docker
   #    ports:
   #       - "8082:8082"
   #    networks:
   #       - clinica-net

   # admissions-service:
   #    build: ./admissions-service
   #    container_name: admissions-service
   #    depends_on:
   #       admissions-db:
   #          condition: service_healthy
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #    environment:
   #       - SPRING_DATASOURCE_URL=jdbc:mysql://admissions-db:3306/${ADMISSIONS_DB_NAME}
   #       - SPRING_DATASOURCE_USERNAME=${ADMISSIONS_DB_USER}
   #       - SPRING_DATASOURCE_PASSWORD=${ADMISSIONS_DB_PASSWORD}
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=docker
   #    ports:
   #       - "8083:8083"
   #    networks:
   #       - clinica-net

   # ai-assistant-service:
   #    build: ./ai-assistant-service
   #    container_name: ai-assistant-service
   #    depends_on:
   #       ai-assistant-db:
   #          condition: service_healthy
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #    environment:
   #       - SPRING_DATASOURCE_URL=jdbc:mysql://ai-assistant-db:3306/${AI_ASSISTANT_DB_NAME}
   #       - SPRING_DATASOURCE_USERNAME=${AI_ASSISTANT_DB_USER}
   #       - SPRING_DATASOURCE_PASSWORD=${AI_ASSISTANT_DB_PASSWORD}
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=docker
   #    ports:
   #       - "8084:8084"
   #    networks:
   #       - clinica-net

   # suppliers-service:
   #    build: ./suppliers-service
   #    container_name: suppliers-service
   #    depends_on:
   #       suppliers-db:
   #          condition: service_healthy
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #    environment:
   #       - SPRING_DATASOURCE_URL=jdbc:mysql://suppliers-db:3306/${SUPPLIERS_DB_NAME}
   #       - SPRING_DATASOURCE_USERNAME=${SUPPLIERS_DB_USER}
   #       - SPRING_DATASOURCE_PASSWORD=${SUPPLIERS_DB_PASSWORD}
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - EUREKA_CLIENT_SERVICE_URL=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=docker
   #    ports:
   #       - "8085:8085"
   #    networks:
   #       - clinica-net

   # auth-service:
   #    build: ./auth-service
   #    container_name: auth-service
   #    depends_on:
   #       auth-db:
   #          condition: service_healthy
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #    environment:
   #       - SPRING_DATASOURCE_URL=jdbc:mysql://auth-db:3306/${AUTH_DB_NAME}
   #       - SPRING_DATASOURCE_USERNAME=${AUTH_DB_USER}
   #       - SPRING_DATASOURCE_PASSWORD=${AUTH_DB_PASSWORD}
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - JWT_SECRET=${JWT_SECRET}
   #       - JWT_EXPIRATION=${JWT_EXPIRATION}
   #       - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=docker
   #    ports:
   #       - "8086:8086"
   #    networks:
   #       - clinica-net

   # Servicio de clientes
   # clients-service:
   #    build: ./clients-service
   #    container_name: clients-service
   #    depends_on:
   #       clients-db:
   #          condition: service_healthy
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #    environment:
   #       - SPRING_DATASOURCE_URL=jdbc:mysql://clients-db:3306/${CLIENTS_DB_NAME}
   #       - SPRING_DATASOURCE_USERNAME=${CLIENTS_DB_USER}
   #       - SPRING_DATASOURCE_PASSWORD=${CLIENTS_DB_PASSWORD}
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - SPRING_REDIS_LETTUCE_POOL_MAX_ACTIVE=8
   #       - SPRING_REDIS_LETTUCE_POOL_MAX_IDLE=8
   #       - SPRING_REDIS_LETTUCE_POOL_MIN_IDLE=0
   #       - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=prod
   #    ports:
   #       - "8087:8087"
   #    networks:
   #       - clinica-net

   # # API Gateway
   # api-gateway:
   #    build: ./api-gateway
   #    container_name: api-gateway
   #    depends_on:
   #       eureka-service:
   #          condition: service_healthy
   #       redis-cache:
   #          condition: service_healthy
   #       - patient-service
   #       - billing-service
   #       - admissions-service
   #       - ai-assistant-service
   #       - suppliers-service
   #       - auth-service
   #       - clients-service
   #    environment:
   #       - PATIENT_SERVICE_URL=http://patient-service:8081
   #       - BILLING_SERVICE_URL=http://billing-service:8082
   #       - ADMISSIONS_SERVICE_URL=http://admissions-service:8083
   #       - AI_ASSISTANT_SERVICE_URL=http://ai-assistant-service:8084
   #       - SUPPLIERS_SERVICE_URL=http://suppliers-service:8085
   #       - AUTH_SERVICE_URL=http://auth-service:8086
   #       - CLIENTS_SERVICE_URL=http://clients-service:8087
   #       - SPRING_REDIS_HOST=redis-cache
   #       - SPRING_REDIS_PORT=6379
   #       - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
   #       - SPRING_REDIS_TIMEOUT=2000ms
   #       - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka/
   #       - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
   #       - SPRING_PROFILES_ACTIVE=docker
   #    ports:
   #       - "8080:8080"
   #    networks:
   #       - clinica-net

   # Redis Insight para monitoreo
   redis-insight:
      image: redislabs/redisinsight:latest
      container_name: redis-insight
      restart: always
      depends_on:
         redis-cache:
            condition: service_healthy
      ports:
         - "8001:8001"
      volumes:
         - redis_insight_data:/db
      networks:
         - clinica-net

# Volúmenes para persistencia de datos
volumes:
   patient_data:
   billing_data:
   admissions_data:
   ai_assistant_data:
   suppliers_data:
   auth_data:
   clients_data:
   redis_data:
   redis_insight_data:

networks:
   clinica-net:
      driver: bridge
