package com.ClinicaDeYmid.patient_service.module.dto;

import com.ClinicaDeYmid.patient_service.module.entity.Occupation;
import com.ClinicaDeYmid.patient_service.module.entity.Site;
import com.ClinicaDeYmid.patient_service.module.enums.*;
import com.ClinicaDeYmid.patient_service.module.validation.ParentsRequiredForMinor;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Past;
import java.time.LocalDate;

@ParentsRequiredForMinor
public record NewPatientDto(
        @Schema(description = "Unique identifier for the patient, generated by the system.", example = "123e4567-e89b-12d3-a456-426614174000")
        String uuid,

        @Schema(description = "Type of identification document", example = "CEDULA_DE_CIUDADANIA")
        @NotNull IdentificationType identificationType,

        @Schema(description = "Identification number", example = "1234567890")
        @NotBlank String identificationNumber,

        @Schema(description = "First name of the patient", example = "Yamid")
        @NotBlank String name,

        @Schema(description = "Last name of the patient", example = "Ortega")
        @NotBlank String lastName,

        @Schema(description = "Date of birth", example = "1990-05-10")
        @NotNull @Past LocalDate dateOfBirth,

        @Schema(description = "Place of birth object")
        @NotNull Site placeOfBirth,

        @Schema(description = "Place of issuance of identification")
        @NotNull Site placeOfIssuance,

        @Schema(description = "Disability", example = "NINGUNA")
        @NotNull Disability disability,

        @Schema(description = "Primary language", example = "SPANISH")
        @NotNull Language language,

        @Schema(description = "Gender", example = "MASCULINE")
        @NotNull Gender gender,

        @Schema(description = "Occupation", example = "Ingeniero de sistemas")
        @NotNull Occupation occupation,

        @Schema(description = "Marital status", example = "SOLTERO")
        @NotNull MaritalStatus maritalStatus,

        @Schema(description = "Religion", example = "CATOLICA")
        @NotNull Religion religion,

        @Schema(description = "Type of affiliation", example = "CONTRIBUTOR")
        @NotNull TypeOfAffiliation typeOfAffiliation,

        @Schema(description = "Affiliation number", example = "AFF-0001")
        String affiliationNumber,

        @Schema(description = "Health provider object in stringified JSON")
        @NotNull String healthProviderNit,

        @Schema(description = "Health policy number", example = "POL-0001")
        String healthPolicyNumber,

        @Schema(description = "Mother's name", example = "Ana Mar√≠a Restrepo")
        String mothersName,

        @Schema(description = "Father's name", example = "Luis Ortega")
        String fathersName,

        @Schema(description = "Zone", example = "URBANA")
        @NotNull Zone zone,

        @Schema(description = "Locality (object)")
        @NotNull Site locality,

        @Schema(description = "Home address", example = "Calle 123 #45-67")
        @NotBlank String address,

        @Schema(description = "Phone number", example = "6011234567")
        String phone,

        @Schema(description = "Mobile number", example = "3011234567")
        @NotBlank String mobile,

        @Schema(description = "Email address", example = "yamid@example.com")
        @NotBlank @Email String email
) {
}
