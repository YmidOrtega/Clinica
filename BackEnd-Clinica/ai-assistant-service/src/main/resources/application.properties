spring.application.name=ai-assistant-service

spring.datasource.url=jdbc:postgresql://${AI_ASSISTANT_DB_HOST}/${AI_ASSISTANT_DB_NAME}
spring.datasource.username=${AI_ASSISTANT_DB_USER}
spring.datasource.password=${AI_ASSISTANT_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.format_sql=true
spring.jpa.open-in-view=false

# Gemini API
spring.ai.vertex.ai.gemini.project-id=${AI_ASSISTANT_GEMINI_PROJECT_ID}
Spring.ai.vertex.ai.gemini.location=global

# Actuator
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers,loggers
management.endpoints.web.base-path=/actuator/ai-assistant

# Resilience4j
resilience4j.circuitbreaker.instances.ai-assistant-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.ai-assistant-service.slidingWindowSize=5
resilience4j.circuitbreaker.instances.ai-assistant-service.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.ai-assistant-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.ai-assistant-service.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.ai-assistant-service.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.ai-assistant-service.permittedNumberOfCallsInHalfOpenState=1
