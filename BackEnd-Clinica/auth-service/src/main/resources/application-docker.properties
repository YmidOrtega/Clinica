# Configuración de Base de Datos (Docker)
spring.datasource.url=${AUTH_DB_HOST}
spring.datasource.username=${AUTH_DB_USER}
spring.datasource.password=${AUTH_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de Pool de Conexiones (Docker)
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.pool-name="AuthHikariCP"
spring.datasource.hikari.leak-detection-threshold=10000

# Configuración JPA (Docker)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configuración de Servidor (Docker)
server.error.include-message=never
server.error.include-stacktrace=never
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Configuración de Redis (Docker)
spring.data.redis.host=redis-cache
spring.data.redis.port=6379
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Configuración de Eureka (Docker)
eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.initial-status-if-eureka-not-available=UP

# Configuración de Logging (Docker)
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.level.org.hibernate=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.flywaydb=INFO
logging.level.com.ClinicaDeYmid.auth_service=INFO
logging.file.name=/var/log/auth-service/auth-service.log
logging.file.max-size=10MB
logging.file.max-history=7

# Actuator (Docker)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoints.web.base-path=/actuator/auth
management.endpoint.health.show-details=never

# Resilience4j (Docker)
resilience4j.circuitbreaker.instances.auth-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.auth-service.slidingWindowSize=10
resilience4j.circuitbreaker.instances.auth-service.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.auth-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.auth-service.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.auth-service.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.auth-service.permittedNumberOfCallsInHalfOpenState=2

# Configuración de JWT (Desarrollo)
jwt.algorithm=RS256
jwt.access-token.expiration=900
jwt.refresh-token.expiration=604800
jwt.rsa.public-key-path=classpath:keys/public_key.pem
jwt.rsa.private-key-path=classpath:keys/private_key.pem