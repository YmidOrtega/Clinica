# --- Configuracion de timeouts para servicios externos ---
app.external-service.timeout=5000

# --- Configuracion de Feign para servicios externos ---
feign.client.config.default.connectTimeout=3000
feign.client.config.default.readTimeout=5000

# Configuracion especifica para servicios externos
feign.client.config.patient-service.connectTimeout=3000
feign.client.config.patient-service.readTimeout=5000
feign.client.config.suppliers-service.connectTimeout=3000
feign.client.config.suppliers-service.readTimeout=5000
feign.client.config.clients-service.connectTimeout=3000
feign.client.config.clients-service.readTimeout=5000
feing.client.config.auth-service.connectTimeout=3000
feing.client.config.auth-service.readTimeout=5000

# --- Configuracion de Base de Datos (PostgreSQL) ---
spring.datasource.url=jdbc:postgresql://admissions-db:5432/${ADMISSIONS_DB_NAME}
spring.datasource.username=${ADMISSIONS_DB_USER}
spring.datasource.password=${ADMISSIONS_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# --- Configuracion de Pool de Conexiones HikariCP (Docker) ---
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.pool-name="AdmissionServiceHikariCP"
spring.datasource.hikari.leak-detection-threshold=10000

# --- Configuracion JPA (Docker) ---
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Configuracion de Servidor (Docker) ---
server.error.include-message=never
server.error.include-stacktrace=never
spring.web.resources.add-mappings=false

# --- Configuracion de Redis (Docker) ---
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:redis-cache}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD}
spring.data.redis.timeout=${SPRING_DATA_REDIS_TIMEOUT:2000ms}
spring.data.redis.lettuce.pool.max-active=${SPRING_DATA_REDIS_LETTUCE_POOL_MAX_ACTIVE:8}
spring.data.redis.lettuce.pool.max-idle=${SPRING_DATA_REDIS_LETTUCE_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${SPRING_DATA_REDIS_LETTUCE_POOL_MIN_IDLE:0}

# --- Configuracion de Eureka (Docker) ---
eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.initial-status=UP

# --- Configuracion de Logging (Docker) ---
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.level.org.hibernate=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.flywaydb=INFO
logging.level.com.ClinicaDeYmid.admissions_service=INFO
logging.file.name=/var/log/admissions-service/admissions-service.log

# --- Actuator (Docker) ---
management.endpoints.web.exposure.include=health,info,metrics
management.endpoints.web.base-path=/actuator/admissions
management.endpoint.health.show-details=never

# --- Resilience4j (Docker) ---
resilience4j.circuitbreaker.instances.admissions-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.admissions-service.slidingWindowSize=10
resilience4j.circuitbreaker.instances.admissions-service.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.admissions-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.admissions-service.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.admissions-service.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.admissions-service.permittedNumberOfCallsInHalfOpenState=2